FROM nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04

########## nvidia-docker1 hooks ##########
LABEL com.nvidia.volumes.needed="nvidia_driver"
ENV PATH /usr/local/nvidia/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}
########## Non-interactive ##########
## Avoiding "Country of origin for the keyboard" 
## in "apt-get install -y ros-kinetic-desktop-full"
# ENV DEBIAN_FRONTEND=noninteractive
########## Time zone ##########
##### UTC #####
# RUN echo 'Etc/UTC' > /etc/timezone && \
#     ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
# 	apt-get update && \
# 	apt-get install -q -y --no-install-recommends tzdata && \
# 	rm -rf /var/lib/apt/lists/*
##### Asia/Tokyo #####
# RUN echo 'Asia/Tokyo' > /etc/timezone && \
#     ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime && \
# 	apt-get update && \
# 	apt-get install -q -y --no-install-recommends tzdata && \
# 	rm -rf /var/lib/apt/lists/*
########## BASIS ##########
RUN apt-get update && apt-get install -y \
	vim \
	wget \
	unzip \
	git \
	cmake-curses-gui
########## ROS kinetic insatall ##########
## NOTE: "lsb_release" -> "lsb-release"
RUN apt-get update && apt-get install -y lsb-release &&\
	sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' &&\
	apt-key adv --keyserver 'hkp://ha.pool.sks-keyservers.net:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 &&\
	apt-get update && apt-get install -y ros-kinetic-ros-base
########## ROS setup ##########
RUN mkdir -p /home/ros_catkin_ws/src && \
	cd /home/ros_catkin_ws/src && \
	/bin/bash -c "source /opt/ros/kinetic/setup.bash; catkin_init_workspace" && \
	cd /home/ros_catkin_ws && \
	/bin/bash -c "source /opt/ros/kinetic/setup.bash; catkin_make" && \
	echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc && \
	echo "source /home/ros_catkin_ws/devel/setup.bash" >> ~/.bashrc && \
	echo "export ROS_PACKAGE_PATH=\${ROS_PACKAGE_PATH}:/home/ros_catkin_ws" >> ~/.bashrc && \
	echo "export ROS_WORKSPACE=/home/ros_catkin_ws" >> ~/.bashrc
## cmk
RUN echo "function cmk(){\n lastpwd=\$OLDPWD \n cpath=\$(pwd) \n cd /home/ros_catkin_ws \n catkin_make \$@ \n cd \$cpath \n OLDPWD=\$lastpwd \n}" >> ~/.bashrc
########## pip ##########
# RUN apt-get update && apt-get install -y python3-pip &&\
# 	pip3 install --upgrade pip
########## PyTorch ##########
RUN apt-get update && apt-get install -y python3-pip &&\
	pip3 install torch==1.0.0 torchvision==0.2.1
########## OpenCV in python3 ##########
# RUN apt-get update && apt-get install -y \
# 		build-essential \
# 		cmake \
# 		git \
# 		libgtk2.0-dev \
# 		pkg-config \
# 		libavcodec-dev \
# 		libavformat-dev \
# 		libswscale-dev \
# 		python3.5-dev &&\
# 	cd /home &&\
# 	git clone https://github.com/Itseez/opencv.git opencv-3 &&\
# 	cd opencv-3 && mkdir build && cd build &&\
# 	cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. &&\
# 	make -j $(nproc --all) &&\
# 	make install
########## Python3 on rospy ##########
RUN apt-get update && apt-get install -y python3-pip &&\
	pip3 install rospkg catkin_pkg
########## vision_opencv ##########
RUN apt-get update && apt-get install -y ros-kinetic-opencv3
RUN apt-get update && apt-get install -y \
		python-catkin-tools \
		python3-dev \
		python3-catkin-pkg-modules \
		python3-numpy \
		python3-yaml \
		ros-kinetic-cv-bridge &&\
	mkdir /home/catkin_build_ws && cd /home/catkin_build_ws &&\
	catkin config -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPYTHON_INCLUDE_DIR=/usr/include/python3.5m -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so &&\
	catkin config --install &&\
	mkdir src && cd src &&\
	git clone -b kinetic https://github.com/ros-perception/vision_opencv.git &&\
	cd /home/catkin_build_ws &&\
	ln -s /usr/lib/x86_64-linux-gnu/libboost_python-py35.so /usr/lib/x86_64-linux-gnu/libboost_python3.so &&\
	/bin/bash -c "source /opt/ros/kinetic/setup.bash; catkin build cv_bridge" &&\
	/bin/bash -c "source install/setup.bash --extend"
RUN echo "source /home/catkin_build_ws/install/setup.bash --extend" >> ~/.bashrc
########## NO cache ##########
ARG CACHEBUST=1
########## dnn_attitude_estimation ##########
##### git clone #####
RUN	cd /home/ros_catkin_ws/src && \
	git clone https://github.com/ozakiryota/dnn_attitude_estimation &&\
	cd /home/ros_catkin_ws && \
	/bin/bash -c "source /opt/ros/kinetic/setup.bash; catkin_make"
##### Authorize #####
RUN	chmod +x /home/ros_catkin_ws/src/dnn_attitude_estimation/pysrc/prediction.py
######### initial position ##########
WORKDIR /home/ros_catkin_ws/src/dnn_attitude_estimation
